package fr.istic.sir.rest;

import java.io.PrintWriter;

import javax.persistence.EntityTransaction;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import domain.Person;
import jpa.Jpa;

@Path("/person")
public class PersonService {
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Person getPerson() {
		Person p = new Person();
		p.setMail("le@mail.exemple").setNom("Le").setPrenom("Test");
		return p;
	}
	

	@GET
	@Path("/jean-mich")
	@Produces(MediaType.APPLICATION_JSON)
	public Person getPersonJeanMich() {
		Person p = new Person();
		p.setMail("jean_mich@jm.fr").setNom("Jean-Mich").setPrenom("Fédussal");
		return p;
	}
	
	@POST
	@Path("/add")
	@Produces(MediaType.APPLICATION_JSON)
	public Person add(	@FormParam("email") String email, 
						@FormParam("nom") String nom, 
						@FormParam("prenom") String prenom){
		Person p = new Person(nom, prenom, email);
		
		// On se connecte à la BDD
		Jpa jpa = Jpa.getInstance();
		
		// On déclare la transaction
		EntityTransaction tx = jpa.getManager().getTransaction();
		
		// On commence la transaction
		tx.begin();
		
		// On sauvegarde l'objet dans la transaction
		jpa.getManager().persist(p);
		
		// On fout la transaction dans la BDD
		tx.commit();
		
		// On retourne l'objet qui sera affiché en JSON
		return p;
	}
}
